# -*- coding: utf-8 -*-
"""Sales_Transactions_Dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1czgbFQ8Pc7Ro-9XNuZtz21NuF2qLLTV7
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np

from sklearn.cluster import KMeans
# Calculate silhouette_score
from sklearn.metrics import silhouette_score

import warnings
warnings.filterwarnings("ignore")

from google.colab import drive
drive.mount('/gdrive')
#Change current working directory to gdrive
# %cd /gdrive

#Read files
trainfile = r'/gdrive/My Drive/CIS 508/Assignment/HW4/Sales_Transactions_Dataset_Weekly.csv'
trainData = pd.read_csv(trainfile) #creates a dataframe
print(trainData.shape)

#Keep Only the Normalised Values
X_train = trainData.drop(['Product_Code','W0','W1','W2','W3','W4','W5','W6','W7','W8','W9','W10','W11','W12','W13','W14','W15','W16','W17','W18','W19','W20','W21','W22','W23','W24','W25','W26','W27','W28','W29','W30','W31','W32','W33','W34','W35','W36','W37','W38','W39','W40','W41','W42','W43','W44','W45','W46','W47','W48','W49','W50','W51','MIN','MAX'], axis=1)
# X_train = X_train.drop(["Region"], axis=1)
print(X_train.shape)

#K-Means Clustering ========================================================================
#Default Mode - K=8
kmeans = KMeans()
kmeans.fit(X_train)
print(X_train.shape)
print(silhouette_score(X_train, kmeans.labels_))

#Add Cluster Number to each datapoint + save file
df_kmeans=X_train
kmeans_predict_train=kmeans.predict(df_kmeans)
df_kmeans['Cluster Number']=kmeans_predict_train
print(df_kmeans.shape)
print(df_kmeans.head())
export_csv = df_kmeans.to_csv(r'/gdrive/My Drive/CIS 508/Assignment/HW4/KmeansClusters_STDW-8.csv')

#K-Means Clustering ========================================================================
# K=15
kmeans = KMeans(n_clusters=15, init='random', algorithm='elkan')
kmeans.fit(X_train)
kmeans.labels_
print(X_train.shape)
#Print Silhouette measure
print(silhouette_score(X_train, kmeans.labels_))

#Add Cluster Number to each datapoint + save file
df_kmeans=X_train
kmeans_predict_train=kmeans.predict(X_train)

df_kmeans['Cluster Number']=kmeans_predict_train
print(df_kmeans.shape)
print(df_kmeans.head())
export_csv = df_kmeans.to_csv(r'/gdrive/My Drive/CIS 508/Assignment/HW4/KmeansClusters_STDW-15.csv')

#K-Means Clustering ========================================================================
# K=20
kmeans = KMeans(n_clusters=20, init='random', algorithm='elkan')
kmeans.fit(X_train)
kmeans.labels_
print(X_train.shape)
#Print Silhouette measure
print(silhouette_score(X_train, kmeans.labels_))

#Add Cluster Number to each datapoint + save file
df_kmeans=X_train
kmeans_predict_train=kmeans.predict(X_train)

df_kmeans['Cluster Number']=kmeans_predict_train
print(df_kmeans.shape)
print(df_kmeans.head())
export_csv = df_kmeans.to_csv(r'/gdrive/My Drive/CIS 508/Assignment/HW4/KmeansClusters_STDW-20.csv')